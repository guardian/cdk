#!/usr/bin/env bash

# This file is run on a schedule via GitHub.
# See `.github/workflows/update-aws-cdk.yaml`

set -e

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
ROOT_DIR=$DIR/..

updateDependency() {
  DEPENDENCY_NAME=$1

  echo "Updating $DEPENDENCY_NAME (if available)"

  # `npx` to avoid a devDependency (and the Dependabot PRs).
  # See https://www.npmjs.com/package/npm-check-updates
  npx npm-check-updates "$DEPENDENCY_NAME" --upgrade --deep --target minor

  FILE=package.json
  TMP_FILE=package.json.tmp

  NEW_VERSION=$(jq -r ".devDependencies.\"${DEPENDENCY_NAME}\"" < "$ROOT_DIR/$FILE")

  # Peer dependencies describe the version clients need.
  # The ^ allows them to use a matching or higher minor/patch version.
  # The means clients can use Dependabot.
  NEW_PEER_VERSION="^${NEW_VERSION}"

  # Synchronise the version within peerDependencies in package.json.
  # As jq doesn't support in-place editing, write to a temp file and move it back.
  jq ".peerDependencies.\"${DEPENDENCY_NAME}\" |= \"${NEW_PEER_VERSION}\"" $FILE > $TMP_FILE && mv $TMP_FILE $FILE
}

updateAwsCdk() {
  updateDependency aws-cdk
  updateDependency aws-cdk-lib
  updateDependency constructs

  # Deliberately NOT `npm ci` as we're going to raise a PR with the resulting changes to package-lock.json
  # --ignore-scripts for speed
  npm install --ignore-scripts

  (
    cd tools/integration-test

    # --ignore-scripts for speed
    npm install --ignore-scripts
  )
}

checkForLocalChanges() {
  if git diff --quiet; then
    echo "No changes. No further action needed."
    exit 0
  fi
}

addChangeset() {
  AWSCDK_VERSION=$1
  MESSAGE=$2

  filename=".changeset/aws-cdk-update-v${AWSCDK_VERSION}.md"
  touch $filename
  echo "---" >> $filename
  echo '"@guardian/cdk": patch' >> $filename
  echo "---" >> $filename
  echo "" >> $filename
  echo "$MESSAGE" >> $filename
  echo "" >> $filename
}

raisePR() {
  AWSCDK_VERSION=$(jq -r '.peerDependencies."aws-cdk"' < "$ROOT_DIR/package.json")
  AWSCDKLIB_VERSION=$(jq -r '.peerDependencies."aws-cdk-lib"' < "$ROOT_DIR/package.json")
  CONSTRUCT_VERSION=$(jq -r '.peerDependencies.constructs' < "$ROOT_DIR/package.json")

  AWSCDK_VERSION_CLEANED=$(
    echo "$AWSCDK_VERSION" \
    | sed 's/\^//g' # Remove ^ to ensure a valid branch name. See https://git-scm.com/docs/git-check-ref-format.
  )

  BRANCH_NAME="update-aws-cdk-$AWSCDK_VERSION_CLEANED"

  COMMIT_SUBJECT="fix(deps): Update AWS CDK libraries to $AWSCDK_VERSION, and constructs to $CONSTRUCT_VERSION"
  COMMIT_BODY="Update aws-cdk to $AWSCDK_VERSION, aws-cdk-lib to $AWSCDKLIB_VERSION, constructs to $CONSTRUCT_VERSION"

  addChangeset "$AWSCDK_VERSION_CLEANED" "$COMMIT_BODY"

  git checkout -b "$BRANCH_NAME"

  for file in package.json package-lock.json tools/integration-test/package.json .changeset/aws-cdk-update-v*.md; do
    git add $file
  done

  git commit -m "$COMMIT_SUBJECT" -m "$COMMIT_BODY"

  git push -u origin "$BRANCH_NAME"
  gh pr create --title "$COMMIT_SUBJECT" --body "$COMMIT_BODY"
}

main() {
  updateAwsCdk
  checkForLocalChanges
  raisePR
}

main
