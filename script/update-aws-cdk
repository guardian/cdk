#!/usr/bin/env bash

# This file is run on a schedule via GitHub.
# See `.github/workflows/update-aws-cdk.yaml`

set -e

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
ROOT_DIR=$DIR/..

updateAwsCdk() {
  # `npx` to avoid a devDependency (and the Dependabot PRs)
  # See https://www.npmjs.com/package/npm-check-updates
  npx npm-check-updates "aws-cdk-lib" "aws-cdk" "constructs" --upgrade --deep --target minor

  # Deliberately NOT `npm ci` as we're going to raise a PR with the resulting changes to package-lock.json
  # --ignore-scripts for speed
  npm install --ignore-scripts

  (
    cd tools/integration-test

    # --ignore-scripts for speed
    npm install --ignore-scripts
  )
}

checkForLocalChanges() {
  if git diff --quiet; then
    echo "No changes. No further action needed."
    exit 0
  fi
}

raisePR() {
  AWSCDK_VERSION=$(jq -r '.peerDependencies."aws-cdk"' < "$ROOT_DIR/package.json")
  AWSCDKLIB_VERSION=$(jq -r '.peerDependencies."aws-cdk-lib"' < "$ROOT_DIR/package.json")
  CONSTRUCT_VERSION=$(jq -r '.peerDependencies.constructs' < "$ROOT_DIR/package.json")

  BRANCH_NAME="update-aws-cdk-$AWSCDK_VERSION"
  COMMIT_SUBJECT="fix(deps): Update AWS CDK libraries to $AWSCDK_VERSION, and constructs to $CONSTRUCT_VERSION"
  COMMIT_BODY="Update aws-cdk to $AWSCDK_VERSION, aws-cdk-lib to $AWSCDKLIB_VERSION, constructs to $CONSTRUCT_VERSION"

  git config user.name guardian-ci
  git config user.email guardian-ci@@users.noreply.github.com

  git checkout -b "$BRANCH_NAME"

  for file in package.json package-lock.json tools/integration-test/package.json; do
    git add $file
  done

  git commit -m "$COMMIT_SUBJECT" -m "$COMMIT_BODY"

  git push -u origin "$BRANCH_NAME"
  gh pr create --title "$COMMIT_SUBJECT" --body "$COMMIT_BODY"
}

main() {
  updateAwsCdk
  checkForLocalChanges
  raisePR
}

main
