// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The GuAlbLambda pattern should create the correct resources with minimal config 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuStack",
      "GuDistributionBucketParameter",
      "GuAlbLambda",
      "GuSubnetListParameter",
      "GuSubnetListParameter",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "LoadBalancerTestingDnsName": {
      "Description": "DNS entry for LoadBalancerTesting",
      "Value": {
        "Fn::GetAtt": [
          "LoadBalancerTesting006FFF6B",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "testingPrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "testingPublicSubnets": {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
  },
  "Resources": {
    "ListenerTesting34F16D51": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroupTesting29B71ABC",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancerTesting006FFF6B",
        },
        "Port": 8080,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerTesting006FFF6B": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LoadBalancerTestingSecurityGroup8250E10B",
              "GroupId",
            ],
          },
        ],
        "Subnets": {
          "Ref": "testingPublicSubnets",
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "testing",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/cdk",
          },
          {
            "Key": "Stack",
            "Value": "test-stack",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerTestingSecurityGroup8250E10B": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB TestLoadBalancerTesting6B05289C",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "testing",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/cdk",
          },
          {
            "Key": "Stack",
            "Value": "test-stack",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": "test",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TargetGroupTesting29B71ABC": {
      "DependsOn": [
        "lambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY67C4BB0E",
      ],
      "Properties": {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Tags": [
          {
            "Key": "App",
            "Value": "testing",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/cdk",
          },
          {
            "Key": "Stack",
            "Value": "test-stack",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
        ],
        "TargetType": "lambda",
        "Targets": [
          {
            "Id": {
              "Fn::GetAtt": [
                "lambda8B5974B5",
                "Arn",
              ],
            },
          },
        ],
        "UnhealthyThresholdCount": 2,
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "lambda8B5974B5": {
      "DependsOn": [
        "lambdaServiceRoleDefaultPolicyBF6FA5E7",
        "lambdaServiceRole494E4CA6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "test-stack/TEST/testing/my-app.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "testing",
            "STACK": "test-stack",
            "STAGE": "TEST",
          },
        },
        "Handler": "handler.ts",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "lambdaServiceRole494E4CA6",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "testing",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/cdk",
          },
          {
            "Key": "Stack",
            "Value": "test-stack",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "lambdaSecurityGroup68370914",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            "test1",
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY67C4BB0E": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "lambda8B5974B5",
            "Arn",
          ],
        },
        "Principal": "elasticloadbalancing.amazonaws.com",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "lambdaSecurityGroup68370914": {
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function Testlambda2DC975DC",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "testing",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/cdk",
          },
          {
            "Key": "Stack",
            "Value": "test-stack",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": "test",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "lambdaServiceRole494E4CA6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "testing",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/cdk",
          },
          {
            "Key": "Stack",
            "Value": "test-stack",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdaServiceRoleDefaultPolicyBF6FA5E7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/test-stack/TEST/testing/my-app.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/test-stack/testing",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/test-stack/testing/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdaServiceRoleDefaultPolicyBF6FA5E7",
        "Roles": [
          {
            "Ref": "lambdaServiceRole494E4CA6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
