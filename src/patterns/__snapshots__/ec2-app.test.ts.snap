// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the GuEC2App pattern should produce a functional EC2 app with minimal arguments 1`] = `
Object {
  "Mappings": Object {
    "stagemapping": Object {
      "CODE": Object {
        "domainName": "code-guardian.com",
        "hostedZoneId": "id123",
        "maxInstances": 2,
        "minInstances": 1,
      },
      "PROD": Object {
        "domainName": "prod-guardian.com",
        "hostedZoneId": "id124",
        "maxInstances": 6,
        "minInstances": 3,
      },
    },
  },
  "Parameters": Object {
    "AMITestguec2app": Object {
      "Description": "Amazon Machine Image ID for the app test-gu-ec2-app. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "DistributionBucketName": Object {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "InstanceTypeTestguec2app": Object {
      "Default": "t3.small",
      "Description": "EC2 Instance Type for the app test-gu-ec2-app",
      "Type": "String",
    },
    "LoggingStreamName": Object {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "Stage": Object {
      "AllowedValues": Array [
        "CODE",
        "PROD",
      ],
      "Default": "CODE",
      "Description": "Stage name",
      "Type": "String",
    },
    "testguec2appPrivateSubnets": Object {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "testguec2appVpcId": Object {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupTestguec2appASG49EA1878": Object {
      "Properties": Object {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupTestguec2appLaunchConfigA7394577",
        },
        "MaxSize": Object {
          "Fn::FindInMap": Array [
            "stagemapping",
            Object {
              "Ref": "Stage",
            },
            "maxInstances",
          ],
        },
        "MinSize": Object {
          "Fn::FindInMap": Array [
            "stagemapping",
            Object {
              "Ref": "Stage",
            },
            "minInstances",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "test-gu-ec2-app",
          },
          Object {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "Test/AutoScalingGroupTestguec2app",
          },
          Object {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "test-stack",
          },
          Object {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "TargetGroupARNs": Array [
          Object {
            "Ref": "TargetGroupTestguec2app9F67D503",
          },
        ],
        "VPCZoneIdentifier": Object {
          "Ref": "testguec2appPrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "AutoScalingGroupTestguec2appInstanceProfile69E61F9E": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTestguec2appC325BE42",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupTestguec2appLaunchConfigA7394577": Object {
      "DependsOn": Array [
        "InstanceRoleTestguec2appC325BE42",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupTestguec2appInstanceProfile69E61F9E",
        },
        "ImageId": Object {
          "Ref": "AMITestguec2app",
        },
        "InstanceType": Object {
          "Ref": "InstanceTypeTestguec2app",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "GuHttpsEgressSecurityGroupTestguec2appEBD7B195",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/dev foobarbaz",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "CertificateTestguec2app86EE2D42": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "DomainName": Object {
          "Fn::FindInMap": Array [
            "stagemapping",
            Object {
              "Ref": "Stage",
            },
            "domainName",
          ],
        },
        "DomainValidationOptions": Array [
          Object {
            "DomainName": Object {
              "Fn::FindInMap": Array [
                "stagemapping",
                Object {
                  "Ref": "Stage",
                },
                "domainName",
              ],
            },
            "HostedZoneId": Object {
              "Fn::FindInMap": Array [
                "stagemapping",
                Object {
                  "Ref": "Stage",
                },
                "hostedZoneId",
              ],
            },
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "test-gu-ec2-app",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "Stack",
            "Value": "test-stack",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "DescribeEC2PolicyFF5F9295": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTestguec2appC325BE42",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyTestguec2app6A8D1854": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:s3:::",
                    Object {
                      "Ref": "DistributionBucketName",
                    },
                    "/test-stack/",
                    Object {
                      "Ref": "Stage",
                    },
                    "/test-gu-ec2-app/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyTestguec2app6A8D1854",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTestguec2appC325BE42",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupTestguec2appEBD7B195": Object {
      "Properties": Object {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "test-gu-ec2-app",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "Stack",
            "Value": "test-stack",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "testguec2appVpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupTestguec2appfromTestLoadBalancerTestguec2appSecurityGroup5F9E11C9300051FB63C7": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupTestguec2appEBD7B195",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerTestguec2appSecurityGroupCC6F85C1",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:kinesis:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    Object {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTestguec2appC325BE42",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRoleTestguec2appC325BE42": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "test-gu-ec2-app",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "Stack",
            "Value": "test-stack",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ListenerTestguec2app4FBB034F": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": Object {
              "Ref": "CertificateTestguec2app86EE2D42",
            },
          },
        ],
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TargetGroupTestguec2app9F67D503",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LoadBalancerTestguec2appC77A055C",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerTestguec2appC77A055C": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internal",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerTestguec2appSecurityGroupCC6F85C1",
              "GroupId",
            ],
          },
        ],
        "Subnets": Object {
          "Ref": "testguec2appPrivateSubnets",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "test-gu-ec2-app",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "Stack",
            "Value": "test-stack",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerTestguec2appSecurityGroupCC6F85C1": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB TestLoadBalancerTestguec2app8CD12AE9",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "test-gu-ec2-app",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "Stack",
            "Value": "test-stack",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "testguec2appVpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerTestguec2appSecurityGrouptoTestGuHttpsEgressSecurityGroupTestguec2appE5EE51F53000FE644240": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupTestguec2appEBD7B195",
            "GroupId",
          ],
        },
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerTestguec2appSecurityGroupCC6F85C1",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadTestguec2app072DCDE1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/",
                    Object {
                      "Ref": "Stage",
                    },
                    "/test-stack/test-gu-ec2-app",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTestguec2appC325BE42",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SSMRunCommandPolicy244E1613": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-run-command-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTestguec2appC325BE42",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupTestguec2app9F67D503": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 10,
        "HealthyThresholdCount": 2,
        "Port": 3000,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "test-gu-ec2-app",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "Stack",
            "Value": "test-stack",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 5,
        "VpcId": Object {
          "Ref": "testguec2appVpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
  },
}
`;
