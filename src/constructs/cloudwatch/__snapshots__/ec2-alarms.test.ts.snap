// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Gu5xxPercentageAlarm construct should create the correct alarm resource with minimal config 1`] = `
Object {
  "Mappings": Object {
    "testing": Object {
      "CODE": Object {
        "alarmActionsEnabled": false,
      },
      "PROD": Object {
        "alarmActionsEnabled": true,
      },
    },
  },
  "Outputs": Object {
    "ApplicationLoadBalancerTestingDnsName": Object {
      "Description": "DNS entry for ApplicationLoadBalancerTesting",
      "Value": Object {
        "Fn::GetAtt": Array [
          "ApplicationLoadBalancerTesting172A253B",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": Object {
    "Stage": Object {
      "AllowedValues": Array [
        "CODE",
        "PROD",
      ],
      "Default": "CODE",
      "Description": "Stage name",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ApplicationLoadBalancerTesting172A253B": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internal",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "ApplicationLoadBalancerTestingSecurityGroup883A01A4",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          "",
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "testing",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk",
          },
          Object {
            "Key": "Stack",
            "Value": "test-stack",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "ApplicationLoadBalancerTestingSecurityGroup883A01A4": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB TestApplicationLoadBalancerTesting8F9EA5A8",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "testing",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk",
          },
          Object {
            "Key": "Stack",
            "Value": "test-stack",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": "test",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "High5xxPercentageAlarmTesting9E960B0F": Object {
      "Properties": Object {
        "ActionsEnabled": Object {
          "Fn::FindInMap": Array [
            "testing",
            Object {
              "Ref": "Stage",
            },
            "alarmActionsEnabled",
          ],
        },
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":test-topic",
              ],
            ],
          },
        ],
        "AlarmDescription": "testing exceeded 1% error rate",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "High 5XX error % from testing in ",
              Object {
                "Ref": "Stage",
              },
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": Array [
          Object {
            "Expression": "100*(m1+m2)/m3",
            "Id": "expr_1",
            "Label": "% of 5XX responses served for testing (load balancer and instances combined)",
          },
          Object {
            "Id": "m1",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "ApplicationLoadBalancerTesting172A253B",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_ELB_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "m2",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "ApplicationLoadBalancerTesting172A253B",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_Target_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "m3",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "ApplicationLoadBalancerTesting172A253B",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "RequestCount",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
}
`;

exports[`The GuUnhealthyInstancesAlarm construct should create the correct alarm resource with minimal config 1`] = `
Object {
  "Mappings": Object {
    "testing": Object {
      "CODE": Object {
        "alarmActionsEnabled": false,
      },
      "PROD": Object {
        "alarmActionsEnabled": true,
      },
    },
  },
  "Outputs": Object {
    "ApplicationLoadBalancerTestingDnsName": Object {
      "Description": "DNS entry for ApplicationLoadBalancerTesting",
      "Value": Object {
        "Fn::GetAtt": Array [
          "ApplicationLoadBalancerTesting172A253B",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": Object {
    "Stage": Object {
      "AllowedValues": Array [
        "CODE",
        "PROD",
      ],
      "Default": "CODE",
      "Description": "Stage name",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ApplicationListener62E539D0": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "ApplicationTargetGroupTesting080C2FF2",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "ApplicationLoadBalancerTesting172A253B",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ApplicationLoadBalancerTesting172A253B": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internal",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "ApplicationLoadBalancerTestingSecurityGroup883A01A4",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          "",
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "testing",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk",
          },
          Object {
            "Key": "Stack",
            "Value": "test-stack",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "ApplicationLoadBalancerTestingSecurityGroup883A01A4": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB TestApplicationLoadBalancerTesting8F9EA5A8",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "testing",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk",
          },
          Object {
            "Key": "Stack",
            "Value": "test-stack",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": "test",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ApplicationTargetGroupTesting080C2FF2": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "testing",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk",
          },
          Object {
            "Key": "Stack",
            "Value": "test-stack",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
        ],
        "UnhealthyThresholdCount": 2,
        "VpcId": "test",
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "UnhealthyInstancesAlarmTestingD3AE50F4": Object {
      "Properties": Object {
        "ActionsEnabled": Object {
          "Fn::FindInMap": Array [
            "testing",
            Object {
              "Ref": "Stage",
            },
            "alarmActionsEnabled",
          ],
        },
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":test-topic",
              ],
            ],
          },
        ],
        "AlarmDescription": "testing's instances have failed healthchecks several times over the last hour.
      This typically results in the AutoScaling Group cycling instances and can lead to problems with deployment,
      scaling or handling traffic spikes.

      Check testing's application logs or ssh onto an unhealthy instance in order to debug these problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Unhealthy instances for testing in ",
              Object {
                "Ref": "Stage",
              },
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 6,
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "ApplicationListener62E539D0",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      2,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "ApplicationListener62E539D0",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "ApplicationListener62E539D0",
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
          },
          Object {
            "Name": "TargetGroup",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ApplicationTargetGroupTesting080C2FF2",
                "TargetGroupFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 12,
        "MetricName": "UnHealthyHostCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
}
`;
