// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The ErrorBudgetAlarmExperimental construct should accept math expressions for more complicated definitions of bad/valid events 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuStack",
      "GuErrorBudgetAlarmExperimental",
    ],
    "gu:cdk:version": "TEST",
  },
  "Resources": {
    "ChildAlarmLongPeriodMapiFrontsAvailabilityFastBurnCompositeAlarmF1A44641": {
      "Properties": {
        "AlarmName": "ChildAlarmLongPeriodMapiFrontsAvailabilityFastBurnCompositeAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "badEvents/validEvents",
            "Id": "expr_1",
            "Label": "Observed failure rate",
          },
          {
            "Expression": "loadBalancerErrors + targetErrors",
            "Id": "badEvents",
            "ReturnData": false,
          },
          {
            "Id": "loadBalancerErrors",
            "MetricStat": {
              "Metric": {
                "MetricName": "LbHttpErrors",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 3600,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "targetErrors",
            "MetricStat": {
              "Metric": {
                "MetricName": "TargetHttpErrors",
                "Namespace": "TestTargetMetrics",
              },
              "Period": 3600,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Expression": "allRequests - invalidRequests",
            "Id": "validEvents",
            "ReturnData": false,
          },
          {
            "Id": "allRequests",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 3600,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "invalidRequests",
            "MetricStat": {
              "Metric": {
                "MetricName": "BadRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 3600,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0.014400000000000013,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ChildAlarmLongPeriodMapiFrontsAvailabilityMediumBurnCompositeAlarmB28EFC34": {
      "Properties": {
        "AlarmName": "ChildAlarmLongPeriodMapiFrontsAvailabilityMediumBurnCompositeAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "badEvents/validEvents",
            "Id": "expr_1",
            "Label": "Observed failure rate",
          },
          {
            "Expression": "loadBalancerErrors + targetErrors",
            "Id": "badEvents",
            "ReturnData": false,
          },
          {
            "Id": "loadBalancerErrors",
            "MetricStat": {
              "Metric": {
                "MetricName": "LbHttpErrors",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 21600,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "targetErrors",
            "MetricStat": {
              "Metric": {
                "MetricName": "TargetHttpErrors",
                "Namespace": "TestTargetMetrics",
              },
              "Period": 21600,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Expression": "allRequests - invalidRequests",
            "Id": "validEvents",
            "ReturnData": false,
          },
          {
            "Id": "allRequests",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 21600,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "invalidRequests",
            "MetricStat": {
              "Metric": {
                "MetricName": "BadRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 21600,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0.006000000000000005,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ChildAlarmLongPeriodMapiFrontsAvailabilitySlowBurnCompositeAlarm31625779": {
      "Properties": {
        "AlarmName": "ChildAlarmLongPeriodMapiFrontsAvailabilitySlowBurnCompositeAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "badEvents/validEvents",
            "Id": "expr_1",
            "Label": "Observed failure rate",
          },
          {
            "Expression": "loadBalancerErrors + targetErrors",
            "Id": "badEvents",
            "ReturnData": false,
          },
          {
            "Id": "loadBalancerErrors",
            "MetricStat": {
              "Metric": {
                "MetricName": "LbHttpErrors",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 86400,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "targetErrors",
            "MetricStat": {
              "Metric": {
                "MetricName": "TargetHttpErrors",
                "Namespace": "TestTargetMetrics",
              },
              "Period": 86400,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Expression": "allRequests - invalidRequests",
            "Id": "validEvents",
            "ReturnData": false,
          },
          {
            "Id": "allRequests",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 86400,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "invalidRequests",
            "MetricStat": {
              "Metric": {
                "MetricName": "BadRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 86400,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0.0030000000000000027,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ChildAlarmShortPeriodMapiFrontsAvailabilityFastBurnCompositeAlarmCF3AFF0A": {
      "Properties": {
        "AlarmName": "ChildAlarmShortPeriodMapiFrontsAvailabilityFastBurnCompositeAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "badEvents/validEvents",
            "Id": "expr_1",
            "Label": "Observed failure rate",
          },
          {
            "Expression": "loadBalancerErrors + targetErrors",
            "Id": "badEvents",
            "ReturnData": false,
          },
          {
            "Id": "loadBalancerErrors",
            "MetricStat": {
              "Metric": {
                "MetricName": "LbHttpErrors",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 300,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "targetErrors",
            "MetricStat": {
              "Metric": {
                "MetricName": "TargetHttpErrors",
                "Namespace": "TestTargetMetrics",
              },
              "Period": 300,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Expression": "allRequests - invalidRequests",
            "Id": "validEvents",
            "ReturnData": false,
          },
          {
            "Id": "allRequests",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 300,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "invalidRequests",
            "MetricStat": {
              "Metric": {
                "MetricName": "BadRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 300,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0.014400000000000013,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ChildAlarmShortPeriodMapiFrontsAvailabilityMediumBurnCompositeAlarmDBEC21EA": {
      "Properties": {
        "AlarmName": "ChildAlarmShortPeriodMapiFrontsAvailabilityMediumBurnCompositeAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "badEvents/validEvents",
            "Id": "expr_1",
            "Label": "Observed failure rate",
          },
          {
            "Expression": "loadBalancerErrors + targetErrors",
            "Id": "badEvents",
            "ReturnData": false,
          },
          {
            "Id": "loadBalancerErrors",
            "MetricStat": {
              "Metric": {
                "MetricName": "LbHttpErrors",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 1800,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "targetErrors",
            "MetricStat": {
              "Metric": {
                "MetricName": "TargetHttpErrors",
                "Namespace": "TestTargetMetrics",
              },
              "Period": 1800,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Expression": "allRequests - invalidRequests",
            "Id": "validEvents",
            "ReturnData": false,
          },
          {
            "Id": "allRequests",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 1800,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "invalidRequests",
            "MetricStat": {
              "Metric": {
                "MetricName": "BadRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 1800,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0.006000000000000005,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ChildAlarmShortPeriodMapiFrontsAvailabilitySlowBurnCompositeAlarmCA6C81C2": {
      "Properties": {
        "AlarmName": "ChildAlarmShortPeriodMapiFrontsAvailabilitySlowBurnCompositeAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "badEvents/validEvents",
            "Id": "expr_1",
            "Label": "Observed failure rate",
          },
          {
            "Expression": "loadBalancerErrors + targetErrors",
            "Id": "badEvents",
            "ReturnData": false,
          },
          {
            "Id": "loadBalancerErrors",
            "MetricStat": {
              "Metric": {
                "MetricName": "LbHttpErrors",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 7200,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "targetErrors",
            "MetricStat": {
              "Metric": {
                "MetricName": "TargetHttpErrors",
                "Namespace": "TestTargetMetrics",
              },
              "Period": 7200,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Expression": "allRequests - invalidRequests",
            "Id": "validEvents",
            "ReturnData": false,
          },
          {
            "Id": "allRequests",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 7200,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "invalidRequests",
            "MetricStat": {
              "Metric": {
                "MetricName": "BadRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 7200,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0.0030000000000000027,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MapiFrontsAvailabilityFastBurnCompositeAlarmA8F736A8": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":test-sns-topic",
              ],
            ],
          },
        ],
        "AlarmName": "TestMapiFrontsAvailabilityFastBurnCompositeAlarmF4979734",
        "AlarmRule": {
          "Fn::Join": [
            "",
            [
              "(ALARM("",
              {
                "Fn::GetAtt": [
                  "ChildAlarmLongPeriodMapiFrontsAvailabilityFastBurnCompositeAlarmF1A44641",
                  "Arn",
                ],
              },
              "") AND ALARM("",
              {
                "Fn::GetAtt": [
                  "ChildAlarmShortPeriodMapiFrontsAvailabilityFastBurnCompositeAlarmCF3AFF0A",
                  "Arn",
                ],
              },
              ""))",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::CompositeAlarm",
    },
    "MapiFrontsAvailabilityMediumBurnCompositeAlarmEC8DC379": {
      "Properties": {
        "ActionsSuppressor": {
          "Fn::GetAtt": [
            "MapiFrontsAvailabilityFastBurnCompositeAlarmA8F736A8",
            "Arn",
          ],
        },
        "ActionsSuppressorExtensionPeriod": 1800,
        "ActionsSuppressorWaitPeriod": 120,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":test-sns-topic",
              ],
            ],
          },
        ],
        "AlarmName": "TestMapiFrontsAvailabilityMediumBurnCompositeAlarm7022D40E",
        "AlarmRule": {
          "Fn::Join": [
            "",
            [
              "(ALARM("",
              {
                "Fn::GetAtt": [
                  "ChildAlarmLongPeriodMapiFrontsAvailabilityMediumBurnCompositeAlarmB28EFC34",
                  "Arn",
                ],
              },
              "") AND ALARM("",
              {
                "Fn::GetAtt": [
                  "ChildAlarmShortPeriodMapiFrontsAvailabilityMediumBurnCompositeAlarmDBEC21EA",
                  "Arn",
                ],
              },
              ""))",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::CompositeAlarm",
    },
    "MapiFrontsAvailabilitySlowBurnCompositeAlarm1198F7B4": {
      "Properties": {
        "ActionsSuppressor": {
          "Fn::GetAtt": [
            "MapiFrontsAvailabilityMediumBurnCompositeAlarmEC8DC379",
            "Arn",
          ],
        },
        "ActionsSuppressorExtensionPeriod": 7200,
        "ActionsSuppressorWaitPeriod": 120,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":test-sns-topic",
              ],
            ],
          },
        ],
        "AlarmName": "TestMapiFrontsAvailabilitySlowBurnCompositeAlarm5EDECA5E",
        "AlarmRule": {
          "Fn::Join": [
            "",
            [
              "(ALARM("",
              {
                "Fn::GetAtt": [
                  "ChildAlarmLongPeriodMapiFrontsAvailabilitySlowBurnCompositeAlarm31625779",
                  "Arn",
                ],
              },
              "") AND ALARM("",
              {
                "Fn::GetAtt": [
                  "ChildAlarmShortPeriodMapiFrontsAvailabilitySlowBurnCompositeAlarmCA6C81C2",
                  "Arn",
                ],
              },
              ""))",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::CompositeAlarm",
    },
  },
}
`;

exports[`The ErrorBudgetAlarmExperimental construct should create the correct resources with basic config 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuStack",
      "GuErrorBudgetAlarmExperimental",
    ],
    "gu:cdk:version": "TEST",
  },
  "Resources": {
    "ChildAlarmLongPeriodMapiFrontsAvailabilityFastBurnCompositeAlarmF1A44641": {
      "Properties": {
        "AlarmName": "ChildAlarmLongPeriodMapiFrontsAvailabilityFastBurnCompositeAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "badEvents/validEvents",
            "Id": "expr_1",
            "Label": "Observed failure rate",
          },
          {
            "Id": "badEvents",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpErrors",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 3600,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "validEvents",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 3600,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0.014400000000000013,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ChildAlarmLongPeriodMapiFrontsAvailabilityMediumBurnCompositeAlarmB28EFC34": {
      "Properties": {
        "AlarmName": "ChildAlarmLongPeriodMapiFrontsAvailabilityMediumBurnCompositeAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "badEvents/validEvents",
            "Id": "expr_1",
            "Label": "Observed failure rate",
          },
          {
            "Id": "badEvents",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpErrors",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 21600,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "validEvents",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 21600,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0.006000000000000005,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ChildAlarmLongPeriodMapiFrontsAvailabilitySlowBurnCompositeAlarm31625779": {
      "Properties": {
        "AlarmName": "ChildAlarmLongPeriodMapiFrontsAvailabilitySlowBurnCompositeAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "badEvents/validEvents",
            "Id": "expr_1",
            "Label": "Observed failure rate",
          },
          {
            "Id": "badEvents",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpErrors",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 86400,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "validEvents",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 86400,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0.0030000000000000027,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ChildAlarmShortPeriodMapiFrontsAvailabilityFastBurnCompositeAlarmCF3AFF0A": {
      "Properties": {
        "AlarmName": "ChildAlarmShortPeriodMapiFrontsAvailabilityFastBurnCompositeAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "badEvents/validEvents",
            "Id": "expr_1",
            "Label": "Observed failure rate",
          },
          {
            "Id": "badEvents",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpErrors",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 300,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "validEvents",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 300,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0.014400000000000013,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ChildAlarmShortPeriodMapiFrontsAvailabilityMediumBurnCompositeAlarmDBEC21EA": {
      "Properties": {
        "AlarmName": "ChildAlarmShortPeriodMapiFrontsAvailabilityMediumBurnCompositeAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "badEvents/validEvents",
            "Id": "expr_1",
            "Label": "Observed failure rate",
          },
          {
            "Id": "badEvents",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpErrors",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 1800,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "validEvents",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 1800,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0.006000000000000005,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ChildAlarmShortPeriodMapiFrontsAvailabilitySlowBurnCompositeAlarmCA6C81C2": {
      "Properties": {
        "AlarmName": "ChildAlarmShortPeriodMapiFrontsAvailabilitySlowBurnCompositeAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "badEvents/validEvents",
            "Id": "expr_1",
            "Label": "Observed failure rate",
          },
          {
            "Id": "badEvents",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpErrors",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 7200,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
          {
            "Id": "validEvents",
            "MetricStat": {
              "Metric": {
                "MetricName": "HttpRequests",
                "Namespace": "TestLoadBalancerMetrics",
              },
              "Period": 7200,
              "Stat": "Average",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0.0030000000000000027,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MapiFrontsAvailabilityFastBurnCompositeAlarmA8F736A8": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":test-sns-topic",
              ],
            ],
          },
        ],
        "AlarmName": "TestMapiFrontsAvailabilityFastBurnCompositeAlarmF4979734",
        "AlarmRule": {
          "Fn::Join": [
            "",
            [
              "(ALARM("",
              {
                "Fn::GetAtt": [
                  "ChildAlarmLongPeriodMapiFrontsAvailabilityFastBurnCompositeAlarmF1A44641",
                  "Arn",
                ],
              },
              "") AND ALARM("",
              {
                "Fn::GetAtt": [
                  "ChildAlarmShortPeriodMapiFrontsAvailabilityFastBurnCompositeAlarmCF3AFF0A",
                  "Arn",
                ],
              },
              ""))",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::CompositeAlarm",
    },
    "MapiFrontsAvailabilityMediumBurnCompositeAlarmEC8DC379": {
      "Properties": {
        "ActionsSuppressor": {
          "Fn::GetAtt": [
            "MapiFrontsAvailabilityFastBurnCompositeAlarmA8F736A8",
            "Arn",
          ],
        },
        "ActionsSuppressorExtensionPeriod": 1800,
        "ActionsSuppressorWaitPeriod": 120,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":test-sns-topic",
              ],
            ],
          },
        ],
        "AlarmName": "TestMapiFrontsAvailabilityMediumBurnCompositeAlarm7022D40E",
        "AlarmRule": {
          "Fn::Join": [
            "",
            [
              "(ALARM("",
              {
                "Fn::GetAtt": [
                  "ChildAlarmLongPeriodMapiFrontsAvailabilityMediumBurnCompositeAlarmB28EFC34",
                  "Arn",
                ],
              },
              "") AND ALARM("",
              {
                "Fn::GetAtt": [
                  "ChildAlarmShortPeriodMapiFrontsAvailabilityMediumBurnCompositeAlarmDBEC21EA",
                  "Arn",
                ],
              },
              ""))",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::CompositeAlarm",
    },
    "MapiFrontsAvailabilitySlowBurnCompositeAlarm1198F7B4": {
      "Properties": {
        "ActionsSuppressor": {
          "Fn::GetAtt": [
            "MapiFrontsAvailabilityMediumBurnCompositeAlarmEC8DC379",
            "Arn",
          ],
        },
        "ActionsSuppressorExtensionPeriod": 7200,
        "ActionsSuppressorWaitPeriod": 120,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":test-sns-topic",
              ],
            ],
          },
        ],
        "AlarmName": "TestMapiFrontsAvailabilitySlowBurnCompositeAlarm5EDECA5E",
        "AlarmRule": {
          "Fn::Join": [
            "",
            [
              "(ALARM("",
              {
                "Fn::GetAtt": [
                  "ChildAlarmLongPeriodMapiFrontsAvailabilitySlowBurnCompositeAlarm31625779",
                  "Arn",
                ],
              },
              "") AND ALARM("",
              {
                "Fn::GetAtt": [
                  "ChildAlarmShortPeriodMapiFrontsAvailabilitySlowBurnCompositeAlarmCA6C81C2",
                  "Arn",
                ],
              },
              ""))",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::CompositeAlarm",
    },
  },
}
`;
